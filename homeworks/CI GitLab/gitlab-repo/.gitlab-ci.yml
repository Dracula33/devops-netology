stages:
  - build
  - test
  - deploy

build:
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://localhost:2375/
    REGISTRY_ID: $REGISTRY_ID
    CONTAINER_NAME: python-api
  image: cr.yandex/yc/metadata-token-docker-helper:0.2
  services:
    - docker:19.03.1-dind
  script:
    - docker build . -t cr.yandex/$REGISTRY_ID/python-api:gitlab-$CI_COMMIT_SHORT_SHA
    - docker push cr.yandex/$REGISTRY_ID/python-api:gitlab-$CI_COMMIT_SHORT_SHA

test:
  stage: test
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://localhost:2375/
    REGISTRY_ID: $REGISTRY_ID
    CONTAINER_NAME: python-api
  image: cr.yandex/yc/metadata-token-docker-helper:0.2
  services:
    - docker:19.03.1-dind
  script:
    - docker pull cr.yandex/$REGISTRY_ID/python-api:gitlab-$CI_COMMIT_SHORT_SHA
    - docker run --name python-api -p 5290:5290 -d cr.yandex/$REGISTRY_ID/python-api:gitlab-$CI_COMMIT_SHORT_SHA
    - sleep 10
    - curl -v http://127.0.0.1:5290/rest/api/get_info | grep -c Running
    - |
      if [[ "$?" != "0" ]]; then
        echo "Test failed"
        exit 1
      fi

deploy:
  image: gcr.io/cloud-builders/kubectl:latest
  stage: deploy
  variables:
      KUBE_URL: $KUBE_URL
      KUBE_TOKEN: $KUBE_TOKEN
  script:
    - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=admin
    - kubectl config use-context default
    - sed -i "s/__VERSION__/gitlab-$CI_COMMIT_SHORT_SHA/" k8s.yaml
    - kubectl apply -f k8s.yaml
  only:
    - main
