---
- name: Preapre all hosts
  hosts: all
  tasks:
    - name: Create group
      become: true
      group:
        name: "{{ user_group }}"
        state: present
    - name: Create user
      become: true
      user:
        name: "{{ user_name }}"
        generate_ssh_key: true
      register: ssh_key_info
    - name: Install JDK
      become: true
      package:
        name: "{{ java_packages }}"
        state: present

- name: Get Jenkins master installed
  hosts: jenkins_masters
  tasks:
    - name: Get repo Jenkins
      become: true
      get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo
        validate_certs: false
    - name: Add Jenkins key
      become: true
      rpm_key:
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
        state: present
        validate_certs: false
    - name: Install epel-release
      become: true
      yum:
        name: epel-release
        state: present
    - name: Install Jenkins and requirements
      become: true
      yum:
        name:
          - jenkins
          - git
        state: present
      register: jenkins_installed
    - name: Ensure jenkins agents are present in known_hosts file
      become: true
      become_user: "{{ jenkins_user_name }}"
      known_hosts:
        name: "{{ hostvars[item].ansible_host }}"
        state: present
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].ansible_host }}') }}"
        hash_host: true
      with_items: "{{ groups.jenkins_agents }}"
    - name: Start Jenkins
      become: true
      systemd:
        name: jenkins
        state: restarted
        enabled: true
      when: jenkins_installed is changed
- name: Prepare jenkins agent
  hosts: jenkins_agents
  become: true
  become_user: "{{ jenkins_user_name }}"
  tasks:
    - name: Add master publickey into authorized_key
      authorized_key:
        user: "{{ jenkins_user_name }}"
        state: present
        key: "{{ hostvars['jenkins-master-01']['ssh_key_info']['ssh_public_key'] }}"
    - name: Create agent_dir
      become_user: root
      file:
        path: "{{ jenkins_agent_dir }}"
        state: directory
        owner: "{{ jenkins_user_name }}"
        group: "{{ jenkins_user_group }}"
    - name: Add docker repo
      become_user: root
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
        validate_certs: false
    - name: Install some required
      become_user: root
      yum:
        update_cache: true
        name:
          - git
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
    - name: Add local to PATH
      lineinfile:
        dest: ~/.bashrc
        regexp: export PATH=$PATH:/home/jenkins/.local/bin
        line: export PATH=$PATH:/home/jenkins/.local/bin
    - name: Create docker group
      become_user: root
      group:
        name: docker
        state: present
    - name: Add jenkinsuser to dockergroup
      become_user: root
      user:
        name: "{{ jenkins_user_name }}"
        groups: docker
    - name: Restart docker
      become_user: root
      systemd:
        name: docker
        state: restarted
        enabled: true
    - name: Install agent.jar
      get_url:
        url: "http://{{ hostvars['jenkins-master-01']['ansible_host'] }}:8080/jnlpJars/agent.jar"
        dest: "{{ jenkins_agent_dir }}"
      register: install_agent
      until: install_agent is succeeded
      retries: 10
      timeout: 10

- name: Additional settings
  hosts: jenkins_masters
  tags: my

  handlers:
    - name: restart jenkins
      become: true
      systemd:
        name: jenkins
        state: restarted
        enabled: true

  tasks:
    - name: Copy config
      become: true
      copy:
        src: jenkins
        dest: /var/lib
        owner: "{{ jenkins_user_name }}"
        group: "{{ jenkins_user_name }}"
      notify: restart jenkins

    - name: Create agent config
      become: true
      template:
        src: j-agent/config.xml.j2
        dest: /var/lib/jenkins/nodes/j-agent/config.xml
        owner: "{{ jenkins_user_name }}"
        group: "{{ jenkins_user_name }}"
      notify: restart jenkins

    - name: save code
      become: true
      shell: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_code

    - name: print code
      debug:
        var: jenkins_code.stdout

- name: Setup jenkins agents
  hosts: jenkins_agents
  tags: my
  tasks:
    - name: Install dependency
      become: true
      yum:
        name:
          - wget
          - gcc
          - openssl-devel
          - libffi-devel
          - zlib-devel
          - libselinux-python3
        state: present

    - name: Get python3.9
      get_url:
        url: https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz
        dest: .

    - name: Unarchive Python
      unarchive:
        src: ./Python-3.9.6.tgz
        dest: .
        remote_src: true

    - name: check python3
      shell: "python3 -V"
      register: j_agent_python_version

    - name: print python version
      debug:
        var: j_agent_python_version['stdout']

    - name: Compile python
      become: true
      shell: "cd Python-3.9.6 && ./configure --enable-optimizations && make altinstall"
      when: j_agent_python_version['stdout'] != 'Python 3.9.6'

    - name: change python symlink
      become: true
      file:
        path: /usr/bin/python3
        src: /usr/local/bin/python3.9
        state: link
        force: true

    - name: Update pip
      become: true
      pip:
        executable: pip3
        name: pip
        extra_args: --upgrade

    - name: Install Molecule
      become: true
      pip:
        executable: pip3
        name:
          - ansible<3.0
          - molecule
          - molecule_docker
          - selinux
        state: present

    - name: Reinstall Selinux
      become: true
      pip:
        executable: pip3
        name:
          - selinux
        state: forcereinstall

    - name: check YC
      become: true
      become_user: jenkins
      shell: yc --version
      register: yc_check
      ignore_errors: true

    - name: get YC
      become: true
      become_user: jenkins
      shell: curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
      when: yc_check.rc == 127
